type User {
  id : ID! @id
  username: String! @unique
  email: String! @unique
  avatar: String
  firstName: String @default (value: "")
  lastName: String
  bio: String
  followers: [User!]! @relation(name: "FollowRelation")
  followings: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "UserToPost" onDelete: CASCADE)
  likes: [Like!]!
  comments: [Comment!]!
  rooms: [Room!]!
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

}

type Post {
  id: ID! @id
  location: String
  caption: String!
  user: User! @relation(name: "UserToPost")
  files: [File!]! @relation(name: "PostToFiles" onDelete: CASCADE)
  likes: [Like!]! @relation(name: "PostToLikes" onDelete: CASCADE)
  comments: [Comment!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  user: User! 
  post: Post @relation(name: "PostToLikes" onDelete:SET_NULL)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User!
  post: Post!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  Post: Post! @relation(name: "PostToFiles")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

}

type Message {
  id: ID! @id
  text: String! 
  from: User! @relation(name: "To")
  to: User! @relation(name: "From")
  room: Room!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}